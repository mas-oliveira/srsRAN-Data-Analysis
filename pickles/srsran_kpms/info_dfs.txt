df_kpms.pkl
df_iperf.pkl
df_latency.pkl
- This dataset group joins the first test setup of setting multiple path loss distributions during the multiple tests. The path loss distributions timestamps are defined in the timestamps.json. 
- The tests were performed with 1 UE and KPM Format 1. BW gNB => 10 MHz and UE with NOF 52

###############################################################################################

df_kpms_fixed_pl_10.pkl    //    df_kpms_fixed_pl_90.pkl
df_iperf_fixed_pl_10.pkl   //    df_iperf_fixed_pl_90.pkl
df_latency_fixed_pl_10.pkl //    df_latency_fixed_pl_90.pkl 
- This dataset group joins a group of tests made with the fixed value of Path Loss = 10/90dB. These table have now the test_number column, this way, timestamps.json is no longer needed.
- The tests were performed with 1 UE and KPM Format 1. BW gNB => 10 MHz and UE with NOF 52

###############################################################################################

df_kpms_pl_10_f5.pkl      //     df_kpms_pl_10_f5.pkl
df_iperf_pl_10_f5.pkl     //     df_iperf_pl_10_f5.pkl 
df_latency_pl_10_f5.pkl   //     df_latency_pl_10_f5.pkl
- This dataset group joins a group of tests made with the fixed value of Path Loss = 10/90dB. These table have now the test_number column, this way, timestamps.json is no longer needed.
- The tests were performed with 3 UE and KPM Format 5. BW gNB => 10 MHz and UEs with NOF 52

###############################################################################################

df_kpms_org_simu_pl_10_f5.pkl      //     df_kpms_org_simu_pl_10_f5.pkl
df_iperf_org_simu_pl_10_f5.pkl     //     df_iperf_org_simu_pl_10_f5.pkl 
df_latency_org_simu_pl_10_f5.pkl   //     df_latency_org_simu_pl_10_f5.pkl
- These dataframes are the same as the df_kpms_pl_X_f5 but are made with the original GNU Radio simulatiopn
- The tests were performed with 3 UE and KPM Format 5. BW gNB => 10 MHz and UEs with NOF 52

###############################################################################################

prbs/df_kpms_prb_25.pkl // prbs/df_kpms_prb_52.pkl // prbs/df_kpms_prb_79.pkl // prbs/df_kpms_prb_106.pkl
prbs/df_iperf_prb_25.pkl // prbs/df_iperf_prb_52.pkl // prbs/df_iperf_prb_79.pkl // prbs/df_iperf_prb_106.pkl
prbs/df_latency_prb_25.pkl // prbs/df_latency_prb_52.pkl // prbs/df_latency_prb_79.pkl // prbs/df_latency_prb_106.pkl
- These dataframes are the original ones generated with the tests with the different PRB numbers. 
Specifications:
	PRB == 25
		Sample Rate => 5.76
		gNB BW => 5 MHz
	PRB == 52
		Sample Rate => 11.52
		gNB BW => 10 MHz
	PRB == 79
		Sample Rate => 15.36
		gNB BW => 15 MHz
	PRB == 106 
		Sample Rate => 23.04
		gNB BW => 20 MHz
- The tests were all performed with 3 UEs. The third test of PRB == 25 at the middle of the test one UE disconnected, trim to get stats, observe to see the influence.
- There is also the need to round the noise amplitude. The reason is that the gRPC messages with float numbers sometimes make some float deadjustments.
- One of the major steps is to join all the KPMs with the different PRBs in just one dataframe. Then we'll get a df with the KPMs to all four PRBs with a new column PRB. REpeat this step to iPerf and Latency dfs.
	df_kpms_prbs_agg.pkl
	df_iperf_prbs_agg.pkl
	df_latency_prbs_agg.pkl

###############################################################################################

df_kpms_prbs_agg.pkl
df_iperf_prbs_agg.pkl
df_latency_prbs_agg.pkl

These dataframes have been built by srsRAN_main_prb AGG_PRBS. Now all the dataframes have a column with the PRBs and Noise Amplitude which is valuable to make some plots of the KPM variation.

completely_agg_prb_an.pkl => Just a dataframe joining all the data on KPMs, iPerf and Latency in one.
								made by an aux script: helper_merge_dfs.py

###############################################################################################

df_kpms_iperf_multi_bitrate.pkl
df_iperf_iperf_multi_bitrate.pkl
df_latency_iperf_multi_bitrate.pkl

These dataframes were collected using different bitrate values on iperf. They just have differente values at -b flag on iperf and the noise is changing to the normal values.
An Values => [-100, -28, -26, -24, -22, -20, -18, -17.8, -17.6, -17.4]
Bitrate values => [1M, 2M, 3M]

TEST_MULTI_BITRATE
Dataframes treated by srsRAN_main_bitrates.py  => MOVE TO MAIN PRB 


###############################################################################################

df_kpms_multi_bitrate_and_noise.pkl
df_iperf_multi_bitrate_and_noise.pkl
df_latency_multi_bitrate_and_noise.pkl

These dataframes were collecintg using different bitrate values on iPerf with the latency values fixed.
There are values for 52 and 106 PRBs.

TEST_MULTI_BITRATE_AND_NOISE (srsRAN_main_bitrates)
An Values => [-100, -28, -26, -24, -22, -20, -18, -17.8, -17.6, -17.4]
Bitrate values => [1M, 2M, 3M, 4M, 5M] Multiple tests for each value

The srsRAN_main_bitrates with these dataframes generated:

df_kpms_multi_bitrate_and_noise_treated.pkl
df_iperf_multi_bitrate_and_noise_treated.pkl
df_latency_multi_bitrate_and_noise_treated.pkl

So you don't have to wait everytime by the assemble of the columns bandiwdth_required, noise_amplitude and prb's on
df_latency and df_kpms.

###############################################################################################

df_kpms_one_ue_latency.pkl
df_iperf_one_ue_latency.pkl
df_latency_one_ue_latency.pkl
df_latency_one_ue.pkl

Bitrate values => [1M, 2M, 3M, 4M, 5M] Multiple tests for each value
PRB_values => [52,106]

These dataframes were collected without noise and just one UE.
There are two dataframes of latency which will converge into one, this was due to an error during the tests. 
The dataframes will be threated (join df_latency_one_ue_latency with df_latency_one_ue and remove bad tests) on aux_threat_one_ue_latency.py

It will load:
df_kpms_one_ue_latency.pkl      (clean)
df_iperf_one_ue_latency.pkl     (clean)
df_latency_one_ue_latency.pkl   (clean)
onto srsran_kpms.

These datasets will generate the means and the plots on srsRAN_main_bitrates. The variable SINGLE_UE must be set to True before starting to play.

The plots have been loaded to latency_improved_one_ue

###############################################################################################

df_kpms_one_ue_latency_noise.pkl
df_iperf_one_ue_latency_noise.pkl
df_latency_one_ue_latency_noise.pkl

Bitrate values => [1M, 2M, 3M, 4M, 5M] Multiple tests for each value
PRB_values => [52,106]

An Values => [-100, -28, -26, -24, -22, -20, -18, -17.8, -17.6, -17.4, -17.2]

These dataframes were collected with noise and just one UE.

The dataframes were threated (remove bad tests) on aux_threat_one_ue_latency.py
